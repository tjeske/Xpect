/*
 * generated by Xtext 2.32.0-SNAPSHOT
 */
lexer grammar InternalXpectLexer;

@header {
package org.eclipse.xpect.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

XPECT_IGNORE : 'XPECT_IGNORE';

XPECT_SETUP : 'XPECT_SETUP';

END_SETUP : 'END_SETUP';

FIXME : 'FIXME';

XPECT : 'XPECT';

False : 'false';

True : 'true';

ExclamationMark : '!';

FullStop : '.';

EqualsSign : '=';

LeftCurlyBracket : '{';

RightCurlyBracket : '}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INVOCATION : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
