module org.eclipse.xpect.GenerateXpect

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var projectName = "org.eclipse.xpect"
var rootPath = ".."
var runtimeProject = "${rootPath}/${projectName}"
var genmodelURI = "platform:/resource/${projectName}/model/Xpect.genmodel"

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.eclipse.xpect"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = false
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			referencedResource = "${genmodelURI}"
			name = "org.eclipse.xpect.Xpect"
			fileExtensions = "xpect"

			serializer = {
				generateStub = false
			}
			validator = {
			}
			generator = {
				generateXtendStub = true
			}
			junitSupport = {
				generateStub = false
			}
			
			fragment = ExternalAntlrLexerFragment {
				runtime = true
				lexerGrammar = 
			}
			
			fragment = ExternalAntlrLexerFragment {
				contentAssist = true
			}
			
			fragment = ExternalAntlrLexerFragment {
				highlighting = true
			}
		}
	}
	
	component = org.eclipse.emf.mwe2.ecore.EcoreGenerator {
		genModel = genmodelURI
		srcPath = "${runtimeProject}/src"
	}
}
